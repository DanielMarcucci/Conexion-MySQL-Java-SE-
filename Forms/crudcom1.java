/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Forms;

import Clases.menu;
import Clases.listenerPer;
import Clases.metodosPer;
import Conexion.traducSQL;
import Estructuras.articulos;
import Estructuras.compras;
import Estructuras.comprasdet;
import Estructuras.proveedores;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.dbutils.handlers.BeanListHandler;
/**
 *
 * @author Daniel Marcucci
 */
public class crudcom1 extends javax.swing.JFrame {
    private List<proveedores> listaPro;
    private List<articulos> listaArt;
    private boolean nuevaFac;
    traducSQL ejSQL = new traducSQL();
    menu menu = new menu();
    metodosPer mp = new metodosPer();
    public crudcom1() {
        initComponents();
        menu.propList(listMenu);
        
        dateFecha.setDate(new Date());
        
        listenerPer l = new listenerPer();
        txtNit.addKeyListener(l.keyNext);
        txtNom.addKeyListener(l.keyNext);
        txtDir.addKeyListener(l.keyNext);
        txtTel.addKeyListener(l.keyNext);
        dateFecha.addKeyListener(l.keyNext);
        
        l.txtInt(txtNoFac);
        l.txtInt(txtIdArt);
        l.txtInt(txtCant);
        
        l.txtDouble(txtPreUnit);
        l.txtDouble(txtMonto);
        l.txtDouble(txtTotal);
        
        btnGuardar.addKeyListener(l.keyPress);
        btnEliminar.addKeyListener(l.keyPress);
        btnNuevo.addKeyListener(l.keyPress);
        
        btnAddRow.addKeyListener(l.keyPress);
        btnRemRow.addKeyListener(l.keyPress);
        btnEmptyDet.addKeyListener(l.keyPress);
        
        ButtonGroup bgBuscarPro = new ButtonGroup();
        bgBuscarPro.add(rdNit);
        bgBuscarPro.add(rdNom);
        bgBuscarPro.add(rdDir);
        
        ButtonGroup bgBuscarArt = new ButtonGroup();
        bgBuscarArt.add(rdNit);
        bgBuscarArt.add(rdNom);
        bgBuscarArt.add(rdDir);
        
        txtNoFac.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblUsu = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtDir = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtNoFac = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dateFecha = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listMenu = new javax.swing.JList<>();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDet = new javax.swing.JTable();
        btnAddRow = new javax.swing.JButton();
        btnRemRow = new javax.swing.JButton();
        txtIdArt = new javax.swing.JTextField();
        txtDes = new javax.swing.JTextField();
        txtPreUnit = new javax.swing.JTextField();
        txtCant = new javax.swing.JTextField();
        txtMonto = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnEmptyDet = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBusPro = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Desabilitar celdas editables
            }
        };
        txtBusPro = new javax.swing.JTextField();
        btnBusPro = new javax.swing.JButton();
        rdNit = new javax.swing.JRadioButton();
        rdNom = new javax.swing.JRadioButton();
        rdDir = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBusArt = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Desabilitar celdas editables
            }
        };
        txtBusArt = new javax.swing.JTextField();
        btnBusArt = new javax.swing.JButton();
        rdCod = new javax.swing.JRadioButton();
        rdDes = new javax.swing.JRadioButton();
        rdId = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 7, 13));

        jPanel2.setBackground(new java.awt.Color(0, 16, 28));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 182, 255));
        jLabel1.setText("Compras");

        lblUsu.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblUsu.setForeground(new java.awt.Color(0, 182, 255));
        lblUsu.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblUsu.setText("Usuario");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 521, Short.MAX_VALUE)
                .addComponent(lblUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUsu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 16, 28));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 182, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("NIT Provee.");

        txtNit.setBackground(new java.awt.Color(0, 182, 255));
        txtNit.setForeground(new java.awt.Color(0, 0, 0));
        txtNit.setDisabledTextColor(new java.awt.Color(0, 182, 255));
        txtNit.setSelectionColor(new java.awt.Color(204, 204, 204));
        txtNit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNitFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 182, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombre Prov.");

        txtNom.setBackground(new java.awt.Color(0, 182, 255));
        txtNom.setForeground(new java.awt.Color(0, 0, 0));
        txtNom.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNom.setEnabled(false);
        txtNom.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtNom.setSelectionColor(new java.awt.Color(0, 0, 0));

        txtDir.setBackground(new java.awt.Color(0, 182, 255));
        txtDir.setForeground(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 182, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Dirección");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 182, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Teléfono");

        txtTel.setBackground(new java.awt.Color(0, 182, 255));
        txtTel.setForeground(new java.awt.Color(0, 0, 0));

        btnGuardar.setBackground(new java.awt.Color(0, 187, 0));
        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(0, 173, 0));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Guardar.png"))); // NOI18N
        btnGuardar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(204, 0, 0));
        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 51, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar.png"))); // NOI18N
        btnEliminar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEliminar.setBorderPainted(false);
        btnEliminar.setContentAreaFilled(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNuevo.setBackground(new java.awt.Color(1, 176, 110));
        btnNuevo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(0, 193, 120));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Nuevo.png"))); // NOI18N
        btnNuevo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 182, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("No. Fac");

        txtNoFac.setBackground(new java.awt.Color(0, 182, 255));
        txtNoFac.setForeground(new java.awt.Color(0, 0, 0));
        txtNoFac.setDisabledTextColor(new java.awt.Color(0, 182, 255));
        txtNoFac.setSelectionColor(new java.awt.Color(204, 204, 204));
        txtNoFac.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNoFacFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 182, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Fecha");

        dateFecha.setBackground(new java.awt.Color(0, 182, 255));
        dateFecha.setForeground(new java.awt.Color(0, 0, 0));
        dateFecha.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                .addGap(12, 12, 12)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoFac, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNuevo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNom)
                            .addComponent(txtDir)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNoFac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(dateFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(0, 16, 28));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 182, 255));
        jLabel9.setText("© Nombre");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addContainerGap())
        );

        listMenu.setBackground(new java.awt.Color(0, 16, 28));
        listMenu.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        listMenu.setForeground(new java.awt.Color(255, 255, 255));
        listMenu.setSelectionBackground(new java.awt.Color(255, 255, 255));
        listMenu.setSelectionForeground(new java.awt.Color(0, 56, 94));
        listMenu.setVisibleRowCount(4);
        listMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMenuMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(listMenu);

        jPanel7.setBackground(new java.awt.Color(0, 16, 28));

        tblDet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripción", "Cantidad", "Precio Unitario", "Monto"
            }
        ));
        jScrollPane4.setViewportView(tblDet);
        if (tblDet.getColumnModel().getColumnCount() > 0) {
            tblDet.getColumnModel().getColumn(0).setMinWidth(100);
            tblDet.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblDet.getColumnModel().getColumn(0).setMaxWidth(100);
            tblDet.getColumnModel().getColumn(1).setMinWidth(350);
            tblDet.getColumnModel().getColumn(1).setPreferredWidth(350);
            tblDet.getColumnModel().getColumn(1).setMaxWidth(350);
        }

        btnAddRow.setBackground(new java.awt.Color(0, 187, 0));
        btnAddRow.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAddRow.setForeground(new java.awt.Color(0, 173, 0));
        btnAddRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/AgregarFila.png"))); // NOI18N
        btnAddRow.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnAddRow.setBorderPainted(false);
        btnAddRow.setContentAreaFilled(false);
        btnAddRow.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRowActionPerformed(evt);
            }
        });

        btnRemRow.setBackground(new java.awt.Color(0, 187, 0));
        btnRemRow.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnRemRow.setForeground(new java.awt.Color(255, 51, 0));
        btnRemRow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/QuitarFila.png"))); // NOI18N
        btnRemRow.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnRemRow.setBorderPainted(false);
        btnRemRow.setContentAreaFilled(false);
        btnRemRow.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnRemRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemRowActionPerformed(evt);
            }
        });

        txtIdArt.setBackground(new java.awt.Color(0, 182, 255));
        txtIdArt.setForeground(new java.awt.Color(0, 0, 0));
        txtIdArt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdArtFocusLost(evt);
            }
        });

        txtDes.setBackground(new java.awt.Color(0, 182, 255));
        txtDes.setForeground(new java.awt.Color(0, 0, 0));
        txtDes.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDes.setEnabled(false);
        txtDes.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtDes.setSelectionColor(new java.awt.Color(0, 0, 0));

        txtPreUnit.setBackground(new java.awt.Color(0, 182, 255));
        txtPreUnit.setForeground(new java.awt.Color(0, 0, 0));
        txtPreUnit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPreUnit.setEnabled(false);
        txtPreUnit.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtPreUnit.setSelectionColor(new java.awt.Color(0, 0, 0));

        txtCant.setBackground(new java.awt.Color(0, 182, 255));
        txtCant.setForeground(new java.awt.Color(0, 0, 0));
        txtCant.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtCant.setSelectionColor(new java.awt.Color(0, 0, 0));
        txtCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantKeyReleased(evt);
            }
        });

        txtMonto.setBackground(new java.awt.Color(0, 182, 255));
        txtMonto.setForeground(new java.awt.Color(0, 0, 0));
        txtMonto.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtMonto.setEnabled(false);
        txtMonto.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtMonto.setSelectionColor(new java.awt.Color(0, 0, 0));

        txtTotal.setBackground(new java.awt.Color(0, 182, 255));
        txtTotal.setFont(new java.awt.Font("Dialog", 0, 22)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(0, 0, 0));
        txtTotal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotal.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 182, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Total");

        btnEmptyDet.setBackground(new java.awt.Color(0, 187, 0));
        btnEmptyDet.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnEmptyDet.setForeground(new java.awt.Color(255, 51, 0));
        btnEmptyDet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Limpiar.png"))); // NOI18N
        btnEmptyDet.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnEmptyDet.setBorderPainted(false);
        btnEmptyDet.setContentAreaFilled(false);
        btnEmptyDet.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEmptyDet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmptyDetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtIdArt, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDes, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPreUnit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMonto))
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRemRow, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEmptyDet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddRow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAddRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEmptyDet))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPreUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTotal)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(0, 16, 28));

        tblBusPro.setBackground(new java.awt.Color(0, 30, 51));
        tblBusPro.setForeground(new java.awt.Color(255, 255, 255));
        tblBusPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nit", "Nombre"
            }
        ));
        tblBusPro.setSelectionBackground(new java.awt.Color(0, 7, 13));
        tblBusPro.setSelectionForeground(new java.awt.Color(0, 182, 255));
        tblBusPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBusProMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBusPro);
        if (tblBusPro.getColumnModel().getColumnCount() > 0) {
            tblBusPro.getColumnModel().getColumn(0).setMinWidth(150);
            tblBusPro.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblBusPro.getColumnModel().getColumn(0).setMaxWidth(150);
        }

        txtBusPro.setBackground(new java.awt.Color(0, 182, 255));
        txtBusPro.setForeground(new java.awt.Color(0, 0, 0));

        btnBusPro.setBackground(new java.awt.Color(0, 162, 227));
        btnBusPro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBusPro.setForeground(new java.awt.Color(0, 182, 255));
        btnBusPro.setText("Buscar");
        btnBusPro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBusPro.setContentAreaFilled(false);
        btnBusPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusProActionPerformed(evt);
            }
        });

        rdNit.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        rdNit.setForeground(new java.awt.Color(0, 182, 255));
        rdNit.setSelected(true);
        rdNit.setText("NIT");
        rdNit.setContentAreaFilled(false);

        rdNom.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        rdNom.setForeground(new java.awt.Color(0, 182, 255));
        rdNom.setText("Nombre");
        rdNom.setContentAreaFilled(false);

        rdDir.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        rdDir.setForeground(new java.awt.Color(0, 182, 255));
        rdDir.setText("Dirección");
        rdDir.setContentAreaFilled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rdNit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdNom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdDir)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnBusPro, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusPro)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdNit)
                    .addComponent(rdNom)
                    .addComponent(rdDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBusPro, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Proveedor", jPanel4);

        jPanel5.setBackground(new java.awt.Color(0, 16, 28));

        tblBusArt.setBackground(new java.awt.Color(0, 30, 51));
        tblBusArt.setForeground(new java.awt.Color(255, 255, 255));
        tblBusArt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripción", "Precio"
            }
        ));
        tblBusArt.setSelectionBackground(new java.awt.Color(0, 7, 13));
        tblBusArt.setSelectionForeground(new java.awt.Color(0, 182, 255));
        tblBusArt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBusArtMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBusArt);
        if (tblBusArt.getColumnModel().getColumnCount() > 0) {
            tblBusArt.getColumnModel().getColumn(0).setMinWidth(100);
            tblBusArt.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblBusArt.getColumnModel().getColumn(0).setMaxWidth(100);
            tblBusArt.getColumnModel().getColumn(2).setMinWidth(100);
            tblBusArt.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblBusArt.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        txtBusArt.setBackground(new java.awt.Color(0, 182, 255));
        txtBusArt.setForeground(new java.awt.Color(0, 0, 0));

        btnBusArt.setBackground(new java.awt.Color(0, 162, 227));
        btnBusArt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBusArt.setForeground(new java.awt.Color(0, 182, 255));
        btnBusArt.setText("Buscar");
        btnBusArt.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBusArt.setContentAreaFilled(false);
        btnBusArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusArtActionPerformed(evt);
            }
        });

        rdCod.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        rdCod.setForeground(new java.awt.Color(0, 182, 255));
        rdCod.setText("Código");
        rdCod.setContentAreaFilled(false);

        rdDes.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        rdDes.setForeground(new java.awt.Color(0, 182, 255));
        rdDes.setText("Descripción");
        rdDes.setContentAreaFilled(false);

        rdId.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        rdId.setForeground(new java.awt.Color(0, 182, 255));
        rdId.setSelected(true);
        rdId.setText("ID");
        rdId.setContentAreaFilled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnBusArt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusArt))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(rdId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdCod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdDes)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdCod)
                    .addComponent(rdDes)
                    .addComponent(rdId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBusArt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Artículos", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTabbedPane1))
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTabbedPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (validarBtn()==false) {
            return;
        }
        String iqr, uqr;
        Object[] ivl, uvl;
        String noFac = txtNoFac.getText();
        String nit = txtNit.getText();
        String total = txtTotal.getText();
        
        DateFormat formatoSQL = new SimpleDateFormat("yyyy-MM-dd");
        String fecha = formatoSQL.format(dateFecha.getDate());
        
        iqr = "INSERT INTO compras(noFacPadre, nitProHijoP, fecha, total) VALUES(?,?,?,?)";
        ivl = new Object[]{noFac,nit,fecha,txtTotal.getText()};
        uqr = "UPDATE compras SET fecha=?, total=? WHERE noFacPadre=? AND nitProHijoP=?";
        uvl = new Object[]{fecha,total,noFac,nit};
        ejSQL.insertUpdate(iqr, ivl, uqr, uvl);
        
        if(!nuevaFac){
            uqr = "DELETE FROM comprasdet WHERE noFacHijo=? AND nitProHijo=?";
            uvl = new Object[]{txtNoFac.getText(),txtNit.getText()};
            ejSQL.delete(uqr,uvl);
        }
        iqr  = "INSERT INTO comprasdet(noFacHijo, nitProHijo, idArtHijo, cant, preUnit, monto) VALUES(?,?,?,?,?,?)";
        DefaultTableModel modelo = (DefaultTableModel) tblDet.getModel();
        for(int i=0;i<modelo.getRowCount();i++){
            ivl = new Object[]{
                noFac,
                nit,
                modelo.getValueAt(i, 0),
                modelo.getValueAt(i, 2),
                modelo.getValueAt(i, 3),
                modelo.getValueAt(i, 4)
            };
            ejSQL.insert(iqr, ivl);
        }
        limpiarBtn(true);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(validarBtn()==false){
            return;
        }
        String qr;
        Object[] vl;
        if(YES_NO_OPTION == showConfirmDialog(null,"¿Está seguro de querer eliminar este registro?","Eliminar Registro",YES_NO_OPTION,QUESTION_MESSAGE)){
            qr = "DELETE FROM comprasdet WHERE noFacHijo=? AND nitProHijo=?";
            vl = new Object[]{txtNoFac.getText(),txtNit.getText()};
            ejSQL.delete(qr,vl);
            
            qr = "DELETE FROM compras WHERE noFacPadre=? AND nitProHijoP=?";
            vl = new Object[]{txtNoFac.getText(),txtNit.getText()};
            ejSQL.delete(qr,vl);
            limpiarBtn(true);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBusProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusProActionPerformed
        int rd;
        if(rdNit.isSelected()){
            rd=1;
        } else if(rdNom.isSelected()){
            rd=2;
        } else {
            rd=3;
        }
        listaPro = bPro(tblBusPro, txtBusPro.getText(), rd);
    }//GEN-LAST:event_btnBusProActionPerformed

    private void tblBusProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusProMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            bProSele(tblBusPro);
        }
    }//GEN-LAST:event_tblBusProMouseClicked

    private void listMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMenuMouseClicked
        menu.opciones(evt, this, listMenu);
    }//GEN-LAST:event_listMenuMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarBtn(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tblBusArtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusArtMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            bArtSele(tblBusArt);
        }
    }//GEN-LAST:event_tblBusArtMouseClicked

    private void btnBusArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusArtActionPerformed
        int rd;
        if(rdId.isSelected()){
            rd=1;
        } else if(rdCod.isSelected()){
            rd=2;
        } else {
            rd=3;
        }
        listaArt = bArt(tblBusArt, txtBusArt.getText(), rd);
    }//GEN-LAST:event_btnBusArtActionPerformed

    private void btnAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRowActionPerformed
        if(txtDes.getText().isEmpty() || txtIdArt.getText().equals("0")){
            showMessageDialog(null,"No se puede agregar a la tabla porque este artículo no existe");
            return;
        }
        
        String monto = txtMonto.getText();
        float total = Float.parseFloat(txtTotal.getText());
        String[] valores = {txtIdArt.getText(),txtDes.getText(),txtCant.getText(),txtPreUnit.getText(),monto};
        DefaultTableModel modelo = (DefaultTableModel) tblDet.getModel();
        modelo.addRow(valores);
        total = total + Float.parseFloat(monto);
        txtTotal.setText(String.valueOf(total));
        limpiarTxtDet(true);
    }//GEN-LAST:event_btnAddRowActionPerformed

    private void btnRemRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemRowActionPerformed
        txtTotal.setText(mp.tblQuiSumFila(tblDet,Float.parseFloat(txtTotal.getText()),4));
    }//GEN-LAST:event_btnRemRowActionPerformed

    private void btnEmptyDetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmptyDetActionPerformed
        mp.tblVaciar(tblDet);
        txtTotal.setText("0.00");
    }//GEN-LAST:event_btnEmptyDetActionPerformed

    private void txtCantKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantKeyReleased
        float preU = Float.parseFloat(txtPreUnit.getText());
        int cant;
        try{
            cant = Integer.parseInt(txtCant.getText());
        }catch (NumberFormatException e){
            cant = 0;
        }
        float monto = preU*cant;
        txtMonto.setText(String.valueOf(monto));
    }//GEN-LAST:event_txtCantKeyReleased

    private void txtNoFacFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoFacFocusLost
        rFac();
    }//GEN-LAST:event_txtNoFacFocusLost

    private void txtNitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNitFocusLost
        rPro();
        rFac();
    }//GEN-LAST:event_txtNitFocusLost

    private void txtIdArtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdArtFocusLost
        rArt();
    }//GEN-LAST:event_txtIdArtFocusLost

    // <editor-fold defaultstate="collapsed" desc="Métodos">
    // <editor-fold defaultstate="collapsed" desc="validarBtn">
    public boolean validarBtn(){
        if(txtNoFac.getText().isEmpty() || txtNoFac.getText().equals("0")){
            JOptionPane.showMessageDialog(null, "Es necesario ingresar un Número de Factura");
            txtNoFac.requestFocus();
            return false;
        }
        if(txtNit.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Es necesario ingresar un Nit de Proveedor");
            txtNit.requestFocus();
            return false;
        }
        if(txtNom.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Este proveedor no ha sido registrado, verifique");
            txtNit.requestFocus();
            return false;
        }
        return true;
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="limpiarBtn">
    public void limpiarBtn(boolean todo){
        txtNoFac.setText("");
        txtNit.setText("");
        txtNom.setText("");
        txtDir.setText("");
        txtTel.setText("");
        limpiarTxtDet(false);
        if(todo){
            mp.tblVaciar(tblDet);
            txtTotal.setText("0.00");
        }
        mp.txtEnabled(txtNoFac);
        mp.txtEnabled(txtNit);
        txtNoFac.requestFocus();
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="limpiarTxtDet">
    public void limpiarTxtDet(boolean focus){
        txtIdArt.setText("");
        txtDes.setText("");
        txtPreUnit.setText("");
        txtCant.setText("");
        txtMonto.setText("");
        if(focus){
            txtIdArt.requestFocus();
        }
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="bProSele">
    private void bProSele(JTable tabla) {
        try {
            int row = tabla.getSelectedRow();
            if (row < 0) {
                row = 0;
            }
            if(!listaPro.get(row).isEstado()){
                showMessageDialog(null,"No se puede usar este proveedor porque no está activo", "Estado Inactivo", JOptionPane.WARNING_MESSAGE, null);
                txtNit.requestFocus();
                return;
            }
            txtNit.setText(listaPro.get(row).getNitProPadre());
            txtNom.setText(listaPro.get(row).getNom());
            txtDir.setText(listaPro.get(row).getDir());
            txtTel.setText(listaPro.get(row).getTel());
            rFac();
        } catch (Exception ex) {
            showMessageDialog(null,"Error: "+ex);
        }
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="bPro">
    public List bPro(JTable tbl,String texto,int opc){
        String[] columnas = new String[2];
        DefaultTableModel filas = (DefaultTableModel) tbl.getModel();
        BeanListHandler blh = new BeanListHandler(proveedores.class);
        Object[] vl = new Object[]{};
        List<proveedores> listaF = ejSQL.select("SELECT * FROM proveedores", blh, vl);
        if("".equals(texto)){
            listaF = listaF.stream()
                    .collect(Collectors.toList());
        }else{
            switch (opc) {
                case 1:
                    listaF = (List<proveedores>) listaF.stream()
                            .filter(c -> (c.getNitProPadre().toUpperCase()).contains((texto.toUpperCase())))
                            .collect(Collectors.toList());
                    break;
                case 2:
                    listaF = (List<proveedores>) listaF.stream()
                            .filter(c -> (c.getNom().toUpperCase()).contains((texto.toUpperCase())))
                            .collect(Collectors.toList());
                    break;
                default:
                    listaF = (List<proveedores>) listaF.stream()
                            .filter(c -> (c.getDir().toUpperCase()).contains((texto.toUpperCase())))
                            .collect(Collectors.toList());
                    break;
            }
        }
        listaF.forEach(item->{
            columnas[0]=item.getNitProPadre();
            columnas[1]=item.getNom();
            filas.addRow(columnas);
        });
        tbl.setModel(filas);
        return listaF;
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="bArtSele">
    private void bArtSele(JTable tabla) {
        try {
            int row = tabla.getSelectedRow();
            if (row < 0) {
                row = 0;
            }
            if(!listaArt.get(row).isEstado()){
                showMessageDialog(null,"No se puede usar este artículo porque no está activo", "Estado Inactivo", JOptionPane.WARNING_MESSAGE, null);
                txtIdArt.requestFocus();
                return;
            }
            txtIdArt.setText(String.valueOf(listaArt.get(row).getIdArtPadre()));
            txtDes.setText(listaArt.get(row).getDes());
            txtPreUnit.setText(String.valueOf(listaArt.get(row).getPreVenta()));
            txtCant.requestFocus();
        } catch (Exception ex) {
            showMessageDialog(null,"Error: "+ex);
        }
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="bArt">
    public List bArt(JTable tbl,String texto,int opc){
        String[] columnas = new String[3];
        DefaultTableModel filas = (DefaultTableModel) tbl.getModel();
        BeanListHandler blh = new BeanListHandler(articulos.class);
        Object[] vl = new Object[]{};
        List<articulos> listaF = ejSQL.select("SELECT * FROM articulos", blh, vl);
        if("".equals(texto)){
            listaF = listaF.stream()
                    .collect(Collectors.toList());
        }else{
            switch (opc) {
                case 1:
                    listaF = (List<articulos>) listaF.stream()
                            .filter(c -> (c.getCod().toUpperCase()).contains((texto.toUpperCase())))
                            .collect(Collectors.toList());
                    break;
                default:
                    listaF = (List<articulos>) listaF.stream()
                            .filter(c -> (c.getDes().toUpperCase()).contains((texto.toUpperCase())))
                            .collect(Collectors.toList());
                    break;
            }
        }
        listaF.forEach(item->{
            columnas[0]=String.valueOf(item.getIdArtPadre());
            columnas[1]=item.getDes();
            columnas[2]=String.valueOf(item.getPreVenta());
            filas.addRow(columnas);
        });
        tbl.setModel(filas);
        return listaF;
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="rFac">
    public void rFac(){
        if(txtNoFac.getText().isEmpty() || txtNit.getText().isEmpty()){
            return;
        }
        String qr;
        Object[] vl;
        qr = "SELECT * FROM compras WHERE noFacPadre=? AND nitProHijoP=?";
        vl = new Object[]{txtNoFac.getText(), txtNit.getText()};
        BeanListHandler blh = new BeanListHandler(compras.class);
        List<compras> lCom = ejSQL.select(qr, blh, vl);
        
        if(lCom.isEmpty()){
            mp.txtEnabled(txtNoFac);
            mp.txtEnabled(txtNit);
            nuevaFac = true;
            return;
        }
        nuevaFac = false;
        
        lCom.forEach(item->{
            dateFecha.setDate(item.getFecha());
            txtTotal.setText(String.valueOf(item.getTotal()));
        });
        
        qr = "SELECT * FROM comprasdet cd INNER JOIN articulos a ON cd.idArtHijo=a.idArtPadre WHERE noFacHijo=? AND nitProHijo=?";
        blh = new BeanListHandler(comprasdet.class);
        List<comprasdet> lComDet = ejSQL.select(qr, blh, vl);
        
        mp.tblVaciar(tblDet);
        String[] columnas = new String[5];
        DefaultTableModel filas = (DefaultTableModel) tblDet.getModel();
        lComDet.forEach(item->{
            columnas[0]=String.valueOf(item.getIdArtHijo());
            columnas[1]=item.getDes();
            columnas[2]=String.valueOf(item.getCant());
            columnas[3]=String.valueOf(item.getPreUnit());
            columnas[4]=String.valueOf(item.getMonto());
            filas.addRow(columnas);
        });
        tblDet.setModel(filas);
        
        mp.txtDisabled(txtNoFac);
        mp.txtDisabled(txtNit);
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="rPro">
    public void rPro(){
        txtNom.setText("");
        txtDir.setText("");
        txtTel.setText("");
        if(txtNit.getText().isEmpty()){
            return;
        }
        String qr;
        Object[] vl;
        qr = "SELECT * FROM proveedores WHERE nitProPadre=?";
        vl = new Object[]{txtNit.getText()};
        BeanListHandler blh = new BeanListHandler(proveedores.class);
        List<proveedores> lPro = ejSQL.select(qr, blh, vl);
        
        if(lPro.isEmpty()){
            showMessageDialog(null,"Este proveedor no existe", "No Existe", JOptionPane.WARNING_MESSAGE, null);
            txtNit.requestFocus();
            return;
        }
        
        lPro.forEach(item->{
            if(!item.isEstado()){
                txtNit.setText("");
                showMessageDialog(null,"No se puede usar este proveedor porque no está activo", "Estado Inactivo", JOptionPane.WARNING_MESSAGE, null);
                txtNit.requestFocus();
                return;
            }
            txtNom.setText(item.getNom());
            txtDir.setText(item.getDir());
            txtTel.setText(item.getTel());
        });
    }
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="rArt">
    public void rArt(){
        txtDes.setText("");
        txtPreUnit.setText("0.00");
        if(txtIdArt.getText().equals("0") || txtIdArt.getText().isEmpty()){
            return;
        }
        String qr;
        Object[] vl;
        qr = "SELECT * FROM articulos WHERE idArtPadre=?";
        vl = new Object[]{txtIdArt.getText()};
        BeanListHandler blh = new BeanListHandler(articulos.class);
        List<articulos> lArt = ejSQL.select(qr, blh, vl);
        
        if(lArt.isEmpty()){
            showMessageDialog(null,"Este artículo no existe", "No Existe", JOptionPane.WARNING_MESSAGE, null);
            txtIdArt.requestFocus();
            return;
        }
        
        lArt.forEach(item->{
            if(!item.isEstado()){
                txtIdArt.setText("");
                showMessageDialog(null,"No se puede usar este artículo porque no está activo", "Estado Inactivo", JOptionPane.WARNING_MESSAGE, null);
                txtIdArt.requestFocus();
                return;
            }
            txtIdArt.setText(String.valueOf(item.getIdArtPadre()));
            txtDes.setText(item.getDes());
            txtPreUnit.setText(String.valueOf(item.getPreVenta()));
        });
    }
    // </editor-fold>
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crudcom1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crudcom1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crudcom1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crudcom1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crudcom1().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRow;
    private javax.swing.JButton btnBusArt;
    private javax.swing.JButton btnBusPro;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEmptyDet;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRemRow;
    private com.toedter.calendar.JDateChooser dateFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblUsu;
    private javax.swing.JList<String> listMenu;
    private javax.swing.JRadioButton rdCod;
    private javax.swing.JRadioButton rdDes;
    private javax.swing.JRadioButton rdDir;
    private javax.swing.JRadioButton rdId;
    private javax.swing.JRadioButton rdNit;
    private javax.swing.JRadioButton rdNom;
    private javax.swing.JTable tblBusArt;
    private javax.swing.JTable tblBusPro;
    private javax.swing.JTable tblDet;
    private javax.swing.JTextField txtBusArt;
    private javax.swing.JTextField txtBusPro;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtDes;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtIdArt;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNoFac;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtPreUnit;
    private javax.swing.JTextField txtTel;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

}
